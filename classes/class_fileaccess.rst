:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/FileAccess.xml.

.. _class_FileAccess:

FileAccess
==========

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Provides methods for file reading and writing operations.

.. rst-class:: classref-introduction-group

Description
-----------

This class can be used to permanently store data in the user device's file system and to read from it. This is useful for store game save data or player configuration files.

Here's a sample on how to write and read from a file:


.. tabs::

 .. code-tab:: gdscript

    func save_to_file(content):
        var file = FileAccess.open("user://save_game.dat", FileAccess.WRITE)
        file.store_string(content)
    
    func load_from_file():
        var file = FileAccess.open("user://save_game.dat", FileAccess.READ)
        var content = file.get_as_text()
        return content

 .. code-tab:: csharp

    public void SaveToFile(string content)
    {
        using var file = FileAccess.Open("user://save_game.dat", FileAccess.ModeFlags.Write);
        file.StoreString(content);
    }
    
    public string LoadFromFile()
    {
        using var file = FileAccess.Open("user://save_game.dat", FileAccess.ModeFlags.Read);
        string content = file.GetAsText();
        return content;
    }



In the example above, the file will be saved in the user data folder as specified in the :doc:`Data paths <../tutorials/io/data_paths>` documentation.

\ **FileAccess** will close when it's freed, which happens when it goes out of scope or when it gets assigned with ``null``. :ref:`close<class_FileAccess_method_close>` can be used to close it before then explicitly. In C# the reference must be disposed manually, which can be done with the ``using`` statement or by calling the ``Dispose`` method directly.

\ **Note:** To access project resources once exported, it is recommended to use :ref:`ResourceLoader<class_ResourceLoader>` instead of **FileAccess**, as some files are converted to engine-specific formats and their original source files might not be present in the exported PCK package. If using **FileAccess**, make sure the file is included in the export by changing its import mode to **Keep File (exported as is)** in the Import dock, or, for files where this option is not available, change the non-resource export filter in the Export dialog to include the file's extension (e.g. ``*.txt``).

\ **Note:** Files are automatically closed only if the process exits "normally" (such as by clicking the window manager's close button or pressing **Alt + F4**). If you stop the project execution by pressing **F8** while the project is running, the file won't be closed as the game process will be killed. You can work around this by calling :ref:`flush<class_FileAccess_method_flush>` at regular intervals.

.. rst-class:: classref-introduction-group

Tutorials
---------

- :doc:`File system <../tutorials/scripting/filesystem>`

- :doc:`Runtime file loading and saving <../tutorials/io/runtime_file_loading_and_saving>`

- `3D Voxel Demo <https://godotengine.org/asset-library/asset/2755>`__

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-------------------------+---------------------------------------------------------+
   | :ref:`bool<class_bool>` | :ref:`big_endian<class_FileAccess_property_big_endian>` |
   +-------------------------+---------------------------------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`close<class_FileAccess_method_close>`\ (\ )                                                                                                                                                                                                                                                       |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                       | :ref:`eof_reached<class_FileAccess_method_eof_reached>`\ (\ ) |const|                                                                                                                                                                                                                                   |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                       | :ref:`file_exists<class_FileAccess_method_file_exists>`\ (\ path\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                                              |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`flush<class_FileAccess_method_flush>`\ (\ )                                                                                                                                                                                                                                                       |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                                         | :ref:`get_8<class_FileAccess_method_get_8>`\ (\ ) |const|                                                                                                                                                                                                                                               |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                                         | :ref:`get_16<class_FileAccess_method_get_16>`\ (\ ) |const|                                                                                                                                                                                                                                             |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                                         | :ref:`get_32<class_FileAccess_method_get_32>`\ (\ ) |const|                                                                                                                                                                                                                                             |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                                         | :ref:`get_64<class_FileAccess_method_get_64>`\ (\ ) |const|                                                                                                                                                                                                                                             |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                   | :ref:`get_as_text<class_FileAccess_method_get_as_text>`\ (\ skip_cr\: :ref:`bool<class_bool>` = false\ ) |const|                                                                                                                                                                                        |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PackedByteArray<class_PackedByteArray>`                                 | :ref:`get_buffer<class_FileAccess_method_get_buffer>`\ (\ length\: :ref:`int<class_int>`\ ) |const|                                                                                                                                                                                                     |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PackedStringArray<class_PackedStringArray>`                             | :ref:`get_csv_line<class_FileAccess_method_get_csv_line>`\ (\ delim\: :ref:`String<class_String>` = ","\ ) |const|                                                                                                                                                                                      |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                                     | :ref:`get_double<class_FileAccess_method_get_double>`\ (\ ) |const|                                                                                                                                                                                                                                     |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`                                         | :ref:`get_error<class_FileAccess_method_get_error>`\ (\ ) |const|                                                                                                                                                                                                                                       |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PackedByteArray<class_PackedByteArray>`                                 | :ref:`get_file_as_bytes<class_FileAccess_method_get_file_as_bytes>`\ (\ path\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                                  |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                   | :ref:`get_file_as_string<class_FileAccess_method_get_file_as_string>`\ (\ path\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                                |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                                     | :ref:`get_float<class_FileAccess_method_get_float>`\ (\ ) |const|                                                                                                                                                                                                                                       |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                       | :ref:`get_hidden_attribute<class_FileAccess_method_get_hidden_attribute>`\ (\ file\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                            |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                                         | :ref:`get_length<class_FileAccess_method_get_length>`\ (\ ) |const|                                                                                                                                                                                                                                     |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                   | :ref:`get_line<class_FileAccess_method_get_line>`\ (\ ) |const|                                                                                                                                                                                                                                         |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                   | :ref:`get_md5<class_FileAccess_method_get_md5>`\ (\ path\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                                                      |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                                         | :ref:`get_modified_time<class_FileAccess_method_get_modified_time>`\ (\ file\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                                  |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`                                         | :ref:`get_open_error<class_FileAccess_method_get_open_error>`\ (\ ) |static|                                                                                                                                                                                                                            |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                   | :ref:`get_pascal_string<class_FileAccess_method_get_pascal_string>`\ (\ )                                                                                                                                                                                                                               |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                   | :ref:`get_path<class_FileAccess_method_get_path>`\ (\ ) |const|                                                                                                                                                                                                                                         |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                   | :ref:`get_path_absolute<class_FileAccess_method_get_path_absolute>`\ (\ ) |const|                                                                                                                                                                                                                       |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                                         | :ref:`get_position<class_FileAccess_method_get_position>`\ (\ ) |const|                                                                                                                                                                                                                                 |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                       | :ref:`get_read_only_attribute<class_FileAccess_method_get_read_only_attribute>`\ (\ file\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                      |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                                     | :ref:`get_real<class_FileAccess_method_get_real>`\ (\ ) |const|                                                                                                                                                                                                                                         |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                   | :ref:`get_sha256<class_FileAccess_method_get_sha256>`\ (\ path\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                                                |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |bitfield|\[:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>`\] | :ref:`get_unix_permissions<class_FileAccess_method_get_unix_permissions>`\ (\ file\: :ref:`String<class_String>`\ ) |static|                                                                                                                                                                            |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>`                                                 | :ref:`get_var<class_FileAccess_method_get_var>`\ (\ allow_objects\: :ref:`bool<class_bool>` = false\ ) |const|                                                                                                                                                                                          |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                       | :ref:`is_open<class_FileAccess_method_is_open>`\ (\ ) |const|                                                                                                                                                                                                                                           |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`FileAccess<class_FileAccess>`                                           | :ref:`open<class_FileAccess_method_open>`\ (\ path\: :ref:`String<class_String>`, flags\: :ref:`ModeFlags<enum_FileAccess_ModeFlags>`\ ) |static|                                                                                                                                                       |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`FileAccess<class_FileAccess>`                                           | :ref:`open_compressed<class_FileAccess_method_open_compressed>`\ (\ path\: :ref:`String<class_String>`, mode_flags\: :ref:`ModeFlags<enum_FileAccess_ModeFlags>`, compression_mode\: :ref:`CompressionMode<enum_FileAccess_CompressionMode>` = 0\ ) |static|                                            |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`FileAccess<class_FileAccess>`                                           | :ref:`open_encrypted<class_FileAccess_method_open_encrypted>`\ (\ path\: :ref:`String<class_String>`, mode_flags\: :ref:`ModeFlags<enum_FileAccess_ModeFlags>`, key\: :ref:`PackedByteArray<class_PackedByteArray>`, iv\: :ref:`PackedByteArray<class_PackedByteArray>` = PackedByteArray()\ ) |static| |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`FileAccess<class_FileAccess>`                                           | :ref:`open_encrypted_with_pass<class_FileAccess_method_open_encrypted_with_pass>`\ (\ path\: :ref:`String<class_String>`, mode_flags\: :ref:`ModeFlags<enum_FileAccess_ModeFlags>`, pass\: :ref:`String<class_String>`\ ) |static|                                                                      |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`                                         | :ref:`resize<class_FileAccess_method_resize>`\ (\ length\: :ref:`int<class_int>`\ )                                                                                                                                                                                                                     |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`seek<class_FileAccess_method_seek>`\ (\ position\: :ref:`int<class_int>`\ )                                                                                                                                                                                                                       |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`seek_end<class_FileAccess_method_seek_end>`\ (\ position\: :ref:`int<class_int>` = 0\ )                                                                                                                                                                                                           |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`                                         | :ref:`set_hidden_attribute<class_FileAccess_method_set_hidden_attribute>`\ (\ file\: :ref:`String<class_String>`, hidden\: :ref:`bool<class_bool>`\ ) |static|                                                                                                                                          |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`                                         | :ref:`set_read_only_attribute<class_FileAccess_method_set_read_only_attribute>`\ (\ file\: :ref:`String<class_String>`, ro\: :ref:`bool<class_bool>`\ ) |static|                                                                                                                                        |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`                                         | :ref:`set_unix_permissions<class_FileAccess_method_set_unix_permissions>`\ (\ file\: :ref:`String<class_String>`, permissions\: |bitfield|\[:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>`\]\ ) |static|                                                                               |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_8<class_FileAccess_method_store_8>`\ (\ value\: :ref:`int<class_int>`\ )                                                                                                                                                                                                                    |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_16<class_FileAccess_method_store_16>`\ (\ value\: :ref:`int<class_int>`\ )                                                                                                                                                                                                                  |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_32<class_FileAccess_method_store_32>`\ (\ value\: :ref:`int<class_int>`\ )                                                                                                                                                                                                                  |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_64<class_FileAccess_method_store_64>`\ (\ value\: :ref:`int<class_int>`\ )                                                                                                                                                                                                                  |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_buffer<class_FileAccess_method_store_buffer>`\ (\ buffer\: :ref:`PackedByteArray<class_PackedByteArray>`\ )                                                                                                                                                                                 |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_csv_line<class_FileAccess_method_store_csv_line>`\ (\ values\: :ref:`PackedStringArray<class_PackedStringArray>`, delim\: :ref:`String<class_String>` = ","\ )                                                                                                                              |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_double<class_FileAccess_method_store_double>`\ (\ value\: :ref:`float<class_float>`\ )                                                                                                                                                                                                      |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_float<class_FileAccess_method_store_float>`\ (\ value\: :ref:`float<class_float>`\ )                                                                                                                                                                                                        |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_line<class_FileAccess_method_store_line>`\ (\ line\: :ref:`String<class_String>`\ )                                                                                                                                                                                                         |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_pascal_string<class_FileAccess_method_store_pascal_string>`\ (\ string\: :ref:`String<class_String>`\ )                                                                                                                                                                                     |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_real<class_FileAccess_method_store_real>`\ (\ value\: :ref:`float<class_float>`\ )                                                                                                                                                                                                          |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_string<class_FileAccess_method_store_string>`\ (\ string\: :ref:`String<class_String>`\ )                                                                                                                                                                                                   |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                        | :ref:`store_var<class_FileAccess_method_store_var>`\ (\ value\: :ref:`Variant<class_Variant>`, full_objects\: :ref:`bool<class_bool>` = false\ )                                                                                                                                                        |
   +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_FileAccess_ModeFlags:

.. rst-class:: classref-enumeration

enum **ModeFlags**: :ref:`🔗<enum_FileAccess_ModeFlags>`

.. _class_FileAccess_constant_READ:

.. rst-class:: classref-enumeration-constant

:ref:`ModeFlags<enum_FileAccess_ModeFlags>` **READ** = ``1``

Opens the file for read operations. The cursor is positioned at the beginning of the file.

.. _class_FileAccess_constant_WRITE:

.. rst-class:: classref-enumeration-constant

:ref:`ModeFlags<enum_FileAccess_ModeFlags>` **WRITE** = ``2``

Opens the file for write operations. The file is created if it does not exist, and truncated if it does.

\ **Note:** When creating a file it must be in an already existing directory. To recursively create directories for a file path, see :ref:`DirAccess.make_dir_recursive<class_DirAccess_method_make_dir_recursive>`.

.. _class_FileAccess_constant_READ_WRITE:

.. rst-class:: classref-enumeration-constant

:ref:`ModeFlags<enum_FileAccess_ModeFlags>` **READ_WRITE** = ``3``

Opens the file for read and write operations. Does not truncate the file. The cursor is positioned at the beginning of the file.

.. _class_FileAccess_constant_WRITE_READ:

.. rst-class:: classref-enumeration-constant

:ref:`ModeFlags<enum_FileAccess_ModeFlags>` **WRITE_READ** = ``7``

Opens the file for read and write operations. The file is created if it does not exist, and truncated if it does. The cursor is positioned at the beginning of the file.

\ **Note:** When creating a file it must be in an already existing directory. To recursively create directories for a file path, see :ref:`DirAccess.make_dir_recursive<class_DirAccess_method_make_dir_recursive>`.

.. rst-class:: classref-item-separator

----

.. _enum_FileAccess_CompressionMode:

.. rst-class:: classref-enumeration

enum **CompressionMode**: :ref:`🔗<enum_FileAccess_CompressionMode>`

.. _class_FileAccess_constant_COMPRESSION_FASTLZ:

.. rst-class:: classref-enumeration-constant

:ref:`CompressionMode<enum_FileAccess_CompressionMode>` **COMPRESSION_FASTLZ** = ``0``

Uses the `FastLZ <https://fastlz.org/>`__ compression method.

.. _class_FileAccess_constant_COMPRESSION_DEFLATE:

.. rst-class:: classref-enumeration-constant

:ref:`CompressionMode<enum_FileAccess_CompressionMode>` **COMPRESSION_DEFLATE** = ``1``

Uses the `DEFLATE <https://en.wikipedia.org/wiki/DEFLATE>`__ compression method.

.. _class_FileAccess_constant_COMPRESSION_ZSTD:

.. rst-class:: classref-enumeration-constant

:ref:`CompressionMode<enum_FileAccess_CompressionMode>` **COMPRESSION_ZSTD** = ``2``

Uses the `Zstandard <https://facebook.github.io/zstd/>`__ compression method.

.. _class_FileAccess_constant_COMPRESSION_GZIP:

.. rst-class:: classref-enumeration-constant

:ref:`CompressionMode<enum_FileAccess_CompressionMode>` **COMPRESSION_GZIP** = ``3``

Uses the `gzip <https://www.gzip.org/>`__ compression method.

.. _class_FileAccess_constant_COMPRESSION_BROTLI:

.. rst-class:: classref-enumeration-constant

:ref:`CompressionMode<enum_FileAccess_CompressionMode>` **COMPRESSION_BROTLI** = ``4``

Uses the `brotli <https://github.com/google/brotli>`__ compression method (only decompression is supported).

.. rst-class:: classref-item-separator

----

.. _enum_FileAccess_UnixPermissionFlags:

.. rst-class:: classref-enumeration

flags **UnixPermissionFlags**: :ref:`🔗<enum_FileAccess_UnixPermissionFlags>`

.. _class_FileAccess_constant_UNIX_READ_OWNER:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_READ_OWNER** = ``256``

Read for owner bit.

.. _class_FileAccess_constant_UNIX_WRITE_OWNER:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_WRITE_OWNER** = ``128``

Write for owner bit.

.. _class_FileAccess_constant_UNIX_EXECUTE_OWNER:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_EXECUTE_OWNER** = ``64``

Execute for owner bit.

.. _class_FileAccess_constant_UNIX_READ_GROUP:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_READ_GROUP** = ``32``

Read for group bit.

.. _class_FileAccess_constant_UNIX_WRITE_GROUP:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_WRITE_GROUP** = ``16``

Write for group bit.

.. _class_FileAccess_constant_UNIX_EXECUTE_GROUP:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_EXECUTE_GROUP** = ``8``

Execute for group bit.

.. _class_FileAccess_constant_UNIX_READ_OTHER:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_READ_OTHER** = ``4``

Read for other bit.

.. _class_FileAccess_constant_UNIX_WRITE_OTHER:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_WRITE_OTHER** = ``2``

Write for other bit.

.. _class_FileAccess_constant_UNIX_EXECUTE_OTHER:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_EXECUTE_OTHER** = ``1``

Execute for other bit.

.. _class_FileAccess_constant_UNIX_SET_USER_ID:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_SET_USER_ID** = ``2048``

Set user id on execution bit.

.. _class_FileAccess_constant_UNIX_SET_GROUP_ID:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_SET_GROUP_ID** = ``1024``

Set group id on execution bit.

.. _class_FileAccess_constant_UNIX_RESTRICTED_DELETE:

.. rst-class:: classref-enumeration-constant

:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>` **UNIX_RESTRICTED_DELETE** = ``512``

Restricted deletion (sticky) bit.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_FileAccess_property_big_endian:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **big_endian** :ref:`🔗<class_FileAccess_property_big_endian>`

.. rst-class:: classref-property-setget

- |void| **set_big_endian**\ (\ value\: :ref:`bool<class_bool>`\ )
- :ref:`bool<class_bool>` **is_big_endian**\ (\ )

If ``true``, the file is read with big-endian `endianness <https://en.wikipedia.org/wiki/Endianness>`__. If ``false``, the file is read with little-endian endianness. If in doubt, leave this to ``false`` as most files are written with little-endian endianness.

\ **Note:** :ref:`big_endian<class_FileAccess_property_big_endian>` is only about the file format, not the CPU type. The CPU endianness doesn't affect the default endianness for files written.

\ **Note:** This is always reset to ``false`` whenever you open the file. Therefore, you must set :ref:`big_endian<class_FileAccess_property_big_endian>` *after* opening the file, not before.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_FileAccess_method_close:

.. rst-class:: classref-method

|void| **close**\ (\ ) :ref:`🔗<class_FileAccess_method_close>`

Closes the currently opened file and prevents subsequent read/write operations. Use :ref:`flush<class_FileAccess_method_flush>` to persist the data to disk without closing the file.

\ **Note:** **FileAccess** will automatically close when it's freed, which happens when it goes out of scope or when it gets assigned with ``null``. In C# the reference must be disposed after we are done using it, this can be done with the ``using`` statement or calling the ``Dispose`` method directly.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_eof_reached:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **eof_reached**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_eof_reached>`

Returns ``true`` if the file cursor has already read past the end of the file.

\ **Note:** ``eof_reached() == false`` cannot be used to check whether there is more data available. To loop while there is more data available, use:


.. tabs::

 .. code-tab:: gdscript

    while file.get_position() < file.get_length():
        # Read data

 .. code-tab:: csharp

    while (file.GetPosition() < file.GetLength())
    {
        // Read data
    }



.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_file_exists:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **file_exists**\ (\ path\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_file_exists>`

Returns ``true`` if the file exists in the given path.

\ **Note:** Many resources types are imported (e.g. textures or sound files), and their source asset will not be included in the exported game, as only the imported version is used. See :ref:`ResourceLoader.exists<class_ResourceLoader_method_exists>` for an alternative approach that takes resource remapping into account.

For a non-static, relative equivalent, use :ref:`DirAccess.file_exists<class_DirAccess_method_file_exists>`.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_flush:

.. rst-class:: classref-method

|void| **flush**\ (\ ) :ref:`🔗<class_FileAccess_method_flush>`

Writes the file's buffer to disk. Flushing is automatically performed when the file is closed. This means you don't need to call :ref:`flush<class_FileAccess_method_flush>` manually before closing a file. Still, calling :ref:`flush<class_FileAccess_method_flush>` can be used to ensure the data is safe even if the project crashes instead of being closed gracefully.

\ **Note:** Only call :ref:`flush<class_FileAccess_method_flush>` when you actually need it. Otherwise, it will decrease performance due to constant disk writes.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_8:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_8**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_8>`

Returns the next 8 bits from the file as an integer. See :ref:`store_8<class_FileAccess_method_store_8>` for details on what values can be stored and retrieved this way.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_16:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_16**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_16>`

Returns the next 16 bits from the file as an integer. See :ref:`store_16<class_FileAccess_method_store_16>` for details on what values can be stored and retrieved this way.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_32:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_32**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_32>`

Returns the next 32 bits from the file as an integer. See :ref:`store_32<class_FileAccess_method_store_32>` for details on what values can be stored and retrieved this way.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_64:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_64**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_64>`

Returns the next 64 bits from the file as an integer. See :ref:`store_64<class_FileAccess_method_store_64>` for details on what values can be stored and retrieved this way.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_as_text:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_as_text**\ (\ skip_cr\: :ref:`bool<class_bool>` = false\ ) |const| :ref:`🔗<class_FileAccess_method_get_as_text>`

Returns the whole file as a :ref:`String<class_String>`. Text is interpreted as being UTF-8 encoded.

If ``skip_cr`` is ``true``, carriage return characters (``\r``, CR) will be ignored when parsing the UTF-8, so that only line feed characters (``\n``, LF) represent a new line (Unix convention).

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_buffer:

.. rst-class:: classref-method

:ref:`PackedByteArray<class_PackedByteArray>` **get_buffer**\ (\ length\: :ref:`int<class_int>`\ ) |const| :ref:`🔗<class_FileAccess_method_get_buffer>`

Returns next ``length`` bytes of the file as a :ref:`PackedByteArray<class_PackedByteArray>`.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_csv_line:

.. rst-class:: classref-method

:ref:`PackedStringArray<class_PackedStringArray>` **get_csv_line**\ (\ delim\: :ref:`String<class_String>` = ","\ ) |const| :ref:`🔗<class_FileAccess_method_get_csv_line>`

Returns the next value of the file in CSV (Comma-Separated Values) format. You can pass a different delimiter ``delim`` to use other than the default ``","`` (comma). This delimiter must be one-character long, and cannot be a double quotation mark.

Text is interpreted as being UTF-8 encoded. Text values must be enclosed in double quotes if they include the delimiter character. Double quotes within a text value can be escaped by doubling their occurrence.

For example, the following CSV lines are valid and will be properly parsed as two strings each:

.. code:: text

    Alice,"Hello, Bob!"
    Bob,Alice! What a surprise!
    Alice,"I thought you'd reply with ""Hello, world""."

Note how the second line can omit the enclosing quotes as it does not include the delimiter. However it *could* very well use quotes, it was only written without for demonstration purposes. The third line must use ``""`` for each quotation mark that needs to be interpreted as such instead of the end of a text value.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_double:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_double**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_double>`

Returns the next 64 bits from the file as a floating-point number.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_error:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **get_error**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_error>`

Returns the last error that happened when trying to perform operations. Compare with the ``ERR_FILE_*`` constants from :ref:`Error<enum_@GlobalScope_Error>`.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_file_as_bytes:

.. rst-class:: classref-method

:ref:`PackedByteArray<class_PackedByteArray>` **get_file_as_bytes**\ (\ path\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_get_file_as_bytes>`

Returns the whole ``path`` file contents as a :ref:`PackedByteArray<class_PackedByteArray>` without any decoding.

Returns an empty :ref:`PackedByteArray<class_PackedByteArray>` if an error occurred while opening the file. You can use :ref:`get_open_error<class_FileAccess_method_get_open_error>` to check the error that occurred.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_file_as_string:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_file_as_string**\ (\ path\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_get_file_as_string>`

Returns the whole ``path`` file contents as a :ref:`String<class_String>`. Text is interpreted as being UTF-8 encoded.

Returns an empty :ref:`String<class_String>` if an error occurred while opening the file. You can use :ref:`get_open_error<class_FileAccess_method_get_open_error>` to check the error that occurred.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_float:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_float**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_float>`

Returns the next 32 bits from the file as a floating-point number.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_hidden_attribute:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **get_hidden_attribute**\ (\ file\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_get_hidden_attribute>`

Returns ``true``, if file ``hidden`` attribute is set.

\ **Note:** This method is implemented on iOS, BSD, macOS, and Windows.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_length:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_length**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_length>`

Returns the size of the file in bytes.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_line:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_line**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_line>`

Returns the next line of the file as a :ref:`String<class_String>`. The returned string doesn't include newline (``\n``) or carriage return (``\r``) characters, but does include any other leading or trailing whitespace.

Text is interpreted as being UTF-8 encoded.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_md5:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_md5**\ (\ path\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_get_md5>`

Returns an MD5 String representing the file at the given path or an empty :ref:`String<class_String>` on failure.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_modified_time:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_modified_time**\ (\ file\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_get_modified_time>`

Returns the last time the ``file`` was modified in Unix timestamp format, or ``0`` on error. This Unix timestamp can be converted to another format using the :ref:`Time<class_Time>` singleton.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_open_error:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **get_open_error**\ (\ ) |static| :ref:`🔗<class_FileAccess_method_get_open_error>`

Returns the result of the last :ref:`open<class_FileAccess_method_open>` call in the current thread.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_pascal_string:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_pascal_string**\ (\ ) :ref:`🔗<class_FileAccess_method_get_pascal_string>`

Returns a :ref:`String<class_String>` saved in Pascal format from the file.

Text is interpreted as being UTF-8 encoded.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_path:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_path**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_path>`

Returns the path as a :ref:`String<class_String>` for the current open file.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_path_absolute:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_path_absolute**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_path_absolute>`

Returns the absolute path as a :ref:`String<class_String>` for the current open file.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_position:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_position**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_position>`

Returns the file cursor's position.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_read_only_attribute:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **get_read_only_attribute**\ (\ file\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_get_read_only_attribute>`

Returns ``true``, if file ``read only`` attribute is set.

\ **Note:** This method is implemented on iOS, BSD, macOS, and Windows.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_real:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_real**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_get_real>`

Returns the next bits from the file as a floating-point number.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_sha256:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_sha256**\ (\ path\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_get_sha256>`

Returns an SHA-256 :ref:`String<class_String>` representing the file at the given path or an empty :ref:`String<class_String>` on failure.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_unix_permissions:

.. rst-class:: classref-method

|bitfield|\[:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>`\] **get_unix_permissions**\ (\ file\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_get_unix_permissions>`

Returns file UNIX permissions.

\ **Note:** This method is implemented on iOS, Linux/BSD, and macOS.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_get_var:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **get_var**\ (\ allow_objects\: :ref:`bool<class_bool>` = false\ ) |const| :ref:`🔗<class_FileAccess_method_get_var>`

Returns the next :ref:`Variant<class_Variant>` value from the file. If ``allow_objects`` is ``true``, decoding objects is allowed.

Internally, this uses the same decoding mechanism as the :ref:`@GlobalScope.bytes_to_var<class_@GlobalScope_method_bytes_to_var>` method.

\ **Warning:** Deserialized objects can contain code which gets executed. Do not use this option if the serialized object comes from untrusted sources to avoid potential security threats such as remote code execution.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_is_open:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_open**\ (\ ) |const| :ref:`🔗<class_FileAccess_method_is_open>`

Returns ``true`` if the file is currently opened.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_open:

.. rst-class:: classref-method

:ref:`FileAccess<class_FileAccess>` **open**\ (\ path\: :ref:`String<class_String>`, flags\: :ref:`ModeFlags<enum_FileAccess_ModeFlags>`\ ) |static| :ref:`🔗<class_FileAccess_method_open>`

Creates a new **FileAccess** object and opens the file for writing or reading, depending on the flags.

Returns ``null`` if opening the file failed. You can use :ref:`get_open_error<class_FileAccess_method_get_open_error>` to check the error that occurred.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_open_compressed:

.. rst-class:: classref-method

:ref:`FileAccess<class_FileAccess>` **open_compressed**\ (\ path\: :ref:`String<class_String>`, mode_flags\: :ref:`ModeFlags<enum_FileAccess_ModeFlags>`, compression_mode\: :ref:`CompressionMode<enum_FileAccess_CompressionMode>` = 0\ ) |static| :ref:`🔗<class_FileAccess_method_open_compressed>`

Creates a new **FileAccess** object and opens a compressed file for reading or writing.

\ **Note:** :ref:`open_compressed<class_FileAccess_method_open_compressed>` can only read files that were saved by Godot, not third-party compression formats. See `GitHub issue #28999 <https://github.com/godotengine/godot/issues/28999>`__ for a workaround.

Returns ``null`` if opening the file failed. You can use :ref:`get_open_error<class_FileAccess_method_get_open_error>` to check the error that occurred.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_open_encrypted:

.. rst-class:: classref-method

:ref:`FileAccess<class_FileAccess>` **open_encrypted**\ (\ path\: :ref:`String<class_String>`, mode_flags\: :ref:`ModeFlags<enum_FileAccess_ModeFlags>`, key\: :ref:`PackedByteArray<class_PackedByteArray>`, iv\: :ref:`PackedByteArray<class_PackedByteArray>` = PackedByteArray()\ ) |static| :ref:`🔗<class_FileAccess_method_open_encrypted>`

Creates a new **FileAccess** object and opens an encrypted file in write or read mode. You need to pass a binary key to encrypt/decrypt it.

\ **Note:** The provided key must be 32 bytes long.

Returns ``null`` if opening the file failed. You can use :ref:`get_open_error<class_FileAccess_method_get_open_error>` to check the error that occurred.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_open_encrypted_with_pass:

.. rst-class:: classref-method

:ref:`FileAccess<class_FileAccess>` **open_encrypted_with_pass**\ (\ path\: :ref:`String<class_String>`, mode_flags\: :ref:`ModeFlags<enum_FileAccess_ModeFlags>`, pass\: :ref:`String<class_String>`\ ) |static| :ref:`🔗<class_FileAccess_method_open_encrypted_with_pass>`

Creates a new **FileAccess** object and opens an encrypted file in write or read mode. You need to pass a password to encrypt/decrypt it.

Returns ``null`` if opening the file failed. You can use :ref:`get_open_error<class_FileAccess_method_get_open_error>` to check the error that occurred.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_resize:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **resize**\ (\ length\: :ref:`int<class_int>`\ ) :ref:`🔗<class_FileAccess_method_resize>`

Resizes the file to a specified length. The file must be open in a mode that permits writing. If the file is extended, NUL characters are appended. If the file is truncated, all data from the end file to the original length of the file is lost.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_seek:

.. rst-class:: classref-method

|void| **seek**\ (\ position\: :ref:`int<class_int>`\ ) :ref:`🔗<class_FileAccess_method_seek>`

Changes the file reading/writing cursor to the specified position (in bytes from the beginning of the file).

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_seek_end:

.. rst-class:: classref-method

|void| **seek_end**\ (\ position\: :ref:`int<class_int>` = 0\ ) :ref:`🔗<class_FileAccess_method_seek_end>`

Changes the file reading/writing cursor to the specified position (in bytes from the end of the file).

\ **Note:** This is an offset, so you should use negative numbers or the cursor will be at the end of the file.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_set_hidden_attribute:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **set_hidden_attribute**\ (\ file\: :ref:`String<class_String>`, hidden\: :ref:`bool<class_bool>`\ ) |static| :ref:`🔗<class_FileAccess_method_set_hidden_attribute>`

Sets file **hidden** attribute.

\ **Note:** This method is implemented on iOS, BSD, macOS, and Windows.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_set_read_only_attribute:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **set_read_only_attribute**\ (\ file\: :ref:`String<class_String>`, ro\: :ref:`bool<class_bool>`\ ) |static| :ref:`🔗<class_FileAccess_method_set_read_only_attribute>`

Sets file **read only** attribute.

\ **Note:** This method is implemented on iOS, BSD, macOS, and Windows.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_set_unix_permissions:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **set_unix_permissions**\ (\ file\: :ref:`String<class_String>`, permissions\: |bitfield|\[:ref:`UnixPermissionFlags<enum_FileAccess_UnixPermissionFlags>`\]\ ) |static| :ref:`🔗<class_FileAccess_method_set_unix_permissions>`

Sets file UNIX permissions.

\ **Note:** This method is implemented on iOS, Linux/BSD, and macOS.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_8:

.. rst-class:: classref-method

|void| **store_8**\ (\ value\: :ref:`int<class_int>`\ ) :ref:`🔗<class_FileAccess_method_store_8>`

Stores an integer as 8 bits in the file.

\ **Note:** The ``value`` should lie in the interval ``[0, 255]``. Any other value will overflow and wrap around.

To store a signed integer, use :ref:`store_64<class_FileAccess_method_store_64>`, or convert it manually (see :ref:`store_16<class_FileAccess_method_store_16>` for an example).

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_16:

.. rst-class:: classref-method

|void| **store_16**\ (\ value\: :ref:`int<class_int>`\ ) :ref:`🔗<class_FileAccess_method_store_16>`

Stores an integer as 16 bits in the file.

\ **Note:** The ``value`` should lie in the interval ``[0, 2^16 - 1]``. Any other value will overflow and wrap around.

To store a signed integer, use :ref:`store_64<class_FileAccess_method_store_64>` or store a signed integer from the interval ``[-2^15, 2^15 - 1]`` (i.e. keeping one bit for the signedness) and compute its sign manually when reading. For example:


.. tabs::

 .. code-tab:: gdscript

    const MAX_15B = 1 << 15
    const MAX_16B = 1 << 16
    
    func unsigned16_to_signed(unsigned):
        return (unsigned + MAX_15B) % MAX_16B - MAX_15B
    
    func _ready():
        var f = FileAccess.open("user://file.dat", FileAccess.WRITE_READ)
        f.store_16(-42) # This wraps around and stores 65494 (2^16 - 42).
        f.store_16(121) # In bounds, will store 121.
        f.seek(0) # Go back to start to read the stored value.
        var read1 = f.get_16() # 65494
        var read2 = f.get_16() # 121
        var converted1 = unsigned16_to_signed(read1) # -42
        var converted2 = unsigned16_to_signed(read2) # 121

 .. code-tab:: csharp

    public override void _Ready()
    {
        using var f = FileAccess.Open("user://file.dat", FileAccess.ModeFlags.WriteRead);
        f.Store16(unchecked((ushort)-42)); // This wraps around and stores 65494 (2^16 - 42).
        f.Store16(121); // In bounds, will store 121.
        f.Seek(0); // Go back to start to read the stored value.
        ushort read1 = f.Get16(); // 65494
        ushort read2 = f.Get16(); // 121
        short converted1 = (short)read1; // -42
        short converted2 = (short)read2; // 121
    }



.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_32:

.. rst-class:: classref-method

|void| **store_32**\ (\ value\: :ref:`int<class_int>`\ ) :ref:`🔗<class_FileAccess_method_store_32>`

Stores an integer as 32 bits in the file.

\ **Note:** The ``value`` should lie in the interval ``[0, 2^32 - 1]``. Any other value will overflow and wrap around.

To store a signed integer, use :ref:`store_64<class_FileAccess_method_store_64>`, or convert it manually (see :ref:`store_16<class_FileAccess_method_store_16>` for an example).

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_64:

.. rst-class:: classref-method

|void| **store_64**\ (\ value\: :ref:`int<class_int>`\ ) :ref:`🔗<class_FileAccess_method_store_64>`

Stores an integer as 64 bits in the file.

\ **Note:** The ``value`` must lie in the interval ``[-2^63, 2^63 - 1]`` (i.e. be a valid :ref:`int<class_int>` value).

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_buffer:

.. rst-class:: classref-method

|void| **store_buffer**\ (\ buffer\: :ref:`PackedByteArray<class_PackedByteArray>`\ ) :ref:`🔗<class_FileAccess_method_store_buffer>`

Stores the given array of bytes in the file.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_csv_line:

.. rst-class:: classref-method

|void| **store_csv_line**\ (\ values\: :ref:`PackedStringArray<class_PackedStringArray>`, delim\: :ref:`String<class_String>` = ","\ ) :ref:`🔗<class_FileAccess_method_store_csv_line>`

Store the given :ref:`PackedStringArray<class_PackedStringArray>` in the file as a line formatted in the CSV (Comma-Separated Values) format. You can pass a different delimiter ``delim`` to use other than the default ``","`` (comma). This delimiter must be one-character long.

Text will be encoded as UTF-8.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_double:

.. rst-class:: classref-method

|void| **store_double**\ (\ value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_FileAccess_method_store_double>`

Stores a floating-point number as 64 bits in the file.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_float:

.. rst-class:: classref-method

|void| **store_float**\ (\ value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_FileAccess_method_store_float>`

Stores a floating-point number as 32 bits in the file.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_line:

.. rst-class:: classref-method

|void| **store_line**\ (\ line\: :ref:`String<class_String>`\ ) :ref:`🔗<class_FileAccess_method_store_line>`

Stores ``line`` in the file followed by a newline character (``\n``), encoding the text as UTF-8.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_pascal_string:

.. rst-class:: classref-method

|void| **store_pascal_string**\ (\ string\: :ref:`String<class_String>`\ ) :ref:`🔗<class_FileAccess_method_store_pascal_string>`

Stores the given :ref:`String<class_String>` as a line in the file in Pascal format (i.e. also store the length of the string).

Text will be encoded as UTF-8.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_real:

.. rst-class:: classref-method

|void| **store_real**\ (\ value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_FileAccess_method_store_real>`

Stores a floating-point number in the file.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_string:

.. rst-class:: classref-method

|void| **store_string**\ (\ string\: :ref:`String<class_String>`\ ) :ref:`🔗<class_FileAccess_method_store_string>`

Stores ``string`` in the file without a newline character (``\n``), encoding the text as UTF-8.

\ **Note:** This method is intended to be used to write text files. The string is stored as a UTF-8 encoded buffer without string length or terminating zero, which means that it can't be loaded back easily. If you want to store a retrievable string in a binary file, consider using :ref:`store_pascal_string<class_FileAccess_method_store_pascal_string>` instead. For retrieving strings from a text file, you can use ``get_buffer(length).get_string_from_utf8()`` (if you know the length) or :ref:`get_as_text<class_FileAccess_method_get_as_text>`.

.. rst-class:: classref-item-separator

----

.. _class_FileAccess_method_store_var:

.. rst-class:: classref-method

|void| **store_var**\ (\ value\: :ref:`Variant<class_Variant>`, full_objects\: :ref:`bool<class_bool>` = false\ ) :ref:`🔗<class_FileAccess_method_store_var>`

Stores any Variant value in the file. If ``full_objects`` is ``true``, encoding objects is allowed (and can potentially include code).

Internally, this uses the same encoding mechanism as the :ref:`@GlobalScope.var_to_bytes<class_@GlobalScope_method_var_to_bytes>` method.

\ **Note:** Not all properties are included. Only properties that are configured with the :ref:`@GlobalScope.PROPERTY_USAGE_STORAGE<class_@GlobalScope_constant_PROPERTY_USAGE_STORAGE>` flag set will be serialized. You can add a new usage flag to a property by overriding the :ref:`Object._get_property_list<class_Object_private_method__get_property_list>` method in your class. You can also check how property usage is configured by calling :ref:`Object._get_property_list<class_Object_private_method__get_property_list>`. See :ref:`PropertyUsageFlags<enum_@GlobalScope_PropertyUsageFlags>` for the possible usage flags.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
